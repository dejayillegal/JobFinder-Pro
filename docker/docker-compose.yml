version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jobfinder_postgres
    environment:
      POSTGRES_USER: jobfinder
      POSTGRES_PASSWORD: jobfinder_password
      POSTGRES_DB: jobfinder
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobfinder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: jobfinder_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Server
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: jobfinder_api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://jobfinder:jobfinder_password@postgres:5432/jobfinder
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      DEBUG: "false"
      LOG_LEVEL: INFO
    ports:
      - "5000:5000"
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: jobfinder_celery
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://jobfinder:jobfinder_password@postgres:5432/jobfinder
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
    command: celery -A api.app.celery_app worker --loglevel=info
    volumes:
      - uploads_data:/app/uploads

  # Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: jobfinder_frontend
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: http://api:5000
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  uploads_data:
